1.Preprocess the input image:
    - Convert the image to grayscale. DONE.
    - Apply thresholding to create a binary image. DONE.

2.Recognize the table structure:
    - Remove small contours from the binary image. NOT DONE[Might exclude it]
    - Detect horizontal and vertical lines in the image. DONE
    - Combine the line-detected images. DONE
    - Erode and dilate the image to enhance the table structure. DONE
    - Extract contours and bounding boxes of table cells. DONE
    - Sort and organize the bounding boxes into rows and columns. DONE
    - Return the final table structure and a processed image containing the table. DONE

3.Extract text from the table image:
    - Use Tesseract OCR to extract the text and layout information from the table image. DONE

4.Create a CSV file from the extracted text data:
    - Reconstruct the table rows based on the extracted text and layout information. DONE
    - Write the reconstructed table to a CSV file. DONE

ESTIMATED RELEASE VERSION 11/04 DONE

#Improvements : 
Delating and erosing each cell depending on its size
Adaptive iterations
Propotional kernel size
Noise Reduction after detecting the lines to avoid the erosion of characters by deleting the small lines, because usually they go from a tight one and get dilated 
Using PaddleOcr to recognize the text from the cells for more accuracy
Distortion
Binarization
Documentation
Changing the way we detect the table from using detectron2 to using contours [NOT WORKING WELL, CANCELLED]
Addnig multiprocessing to each row
Adding multiprocessing to cells data extraction [Allow the children process to have another]
Adding safety to data writing 
Adding multiprocessing to table processing
Adding pdf handling, Process : pdf -> images -> process_images
Make the thresholding dynamic
Modifying the crop of the image to make sure it always gets the borders being setted